server.port=8082
spring.application.name=photo-app-api-gateway
eureka.client.service-url.defaultZone=http://localhost:8010/eureka

# Below two lines do the configuration to use the microservice name in API Gateway URL to call rest services
# For example http://localhost:8082/photo-app-api-users/users/status/check
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://photo-app-api-users
#spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[0]=Path=/photo-app-api-users/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
#spring.cloud.gateway.routes[0].filters[1]=RewritePath=/photo-app-api-users/users/status/check, /users/status/check
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/photo-app-api-users/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[0].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[1].id=photo-app-api-users
spring.cloud.gateway.routes[1].uri=lb://photo-app-api-users
spring.cloud.gateway.routes[1].predicates[0]=Path=/photo-app-api-users/users
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/photo-app-api-users/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id=photo-app-api-users-login
spring.cloud.gateway.routes[2].uri=lb://photo-app-api-users
spring.cloud.gateway.routes[2].predicates[0]=Path=/photo-app-api-users/users/login
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/photo-app-api-users/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[3].id=photo-app-api-users-get-update-delete
spring.cloud.gateway.routes[3].uri=lb://photo-app-api-users
spring.cloud.gateway.routes[3].predicates[0]=Path=/photo-app-api-users/users/**
spring.cloud.gateway.routes[3].predicates[1]=Method=GET,PUT,DELETE
spring.cloud.gateway.routes[3].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/photo-app-api-users/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[3].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[4].id=photo-app-api-users-h2-console
spring.cloud.gateway.routes[4].uri=lb://photo-app-api-users
spring.cloud.gateway.routes[4].predicates[0]=Path=/photo-app-api-users/h2-console
spring.cloud.gateway.routes[4].predicates[1]=Method=GET
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/photo-app-api-users/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[5].id=photo-app-api-users-actuator-id
spring.cloud.gateway.routes[5].uri=lb://photo-app-api-users
spring.cloud.gateway.routes[5].predicates[0]=Path=/photo-app-api-users/actuator/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/photo-app-api-users/(?<segment>.*), /$\{segment}

token.secret = csdiorwejowobsocodinglkfsdsdsddsomn

# Where: localhost:8012 is a domain and port on which Config Server is running.
# The first priority is config server application.properties file to load the properties and if the property is not found in config server
# then will check in local application.properties file
#spring.config.import=optional:configserver:http://192.168.1.33:8012

# rabbitmq details
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

management.endpoints.web.exposure.include=beans,health,routes,httptrace